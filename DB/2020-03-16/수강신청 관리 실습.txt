-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- SUBJECT Table Create SQL
CREATE TABLE SUBJECT
(
    SUBJECT_NO       NUMBER           NOT NULL, 
    SUBJECT_TITLE    VARCHAR2(100)    NOT NULL, 
    CONSTRAINT SUBJECT_PK PRIMARY KEY (SUBJECT_NO)
)
/

CREATE SEQUENCE SUBJECT_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER SUBJECT_AI_TRG
BEFORE INSERT ON SUBJECT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT SUBJECT_SEQ.NEXTVAL
    INTO :NEW.SUBJECT_NO
    FROM DUAL;
END;
/

--DROP TRIGGER SUBJECT_AI_TRG;
/

--DROP SEQUENCE SUBJECT_SEQ;
/

COMMENT ON TABLE SUBJECT IS '과목'
/

COMMENT ON COLUMN SUBJECT.SUBJECT_NO IS '과목코드'
/

COMMENT ON COLUMN SUBJECT.SUBJECT_TITLE IS '과목명'
/


-- SUBJECT Table Create SQL
CREATE TABLE TEACHAR
(
    TEA_ID       VARCHAR2(20)     NOT NULL, 
    TEA_NAME     VARCHAR2(30)     NULL, 
    TEA_PHONE    CHAR(13)         NULL, 
    TEA_ADDR     VARCHAR2(500)    NULL, 
    CONSTRAINT TEACHAR_PK PRIMARY KEY (TEA_ID)
)
/

COMMENT ON TABLE TEACHAR IS '강사'
/

COMMENT ON COLUMN TEACHAR.TEA_ID IS '강사ID'
/

COMMENT ON COLUMN TEACHAR.TEA_NAME IS '이름'
/

COMMENT ON COLUMN TEACHAR.TEA_PHONE IS '전화번호'
/

COMMENT ON COLUMN TEACHAR.TEA_ADDR IS '주소'
/


-- SUBJECT Table Create SQL
CREATE TABLE CLASS
(
    CLASS_NO        NUMBER          NOT NULL, 
    SUBJECT_NO      NUMBER          NOT NULL, 
    TEACHAR_ID      VARCHAR2(20)    NOT NULL, 
    CLASS_DAY       VARCHAR2(3)     NOT NULL, 
    CLASS_PERIOD    NUMBER          NOT NULL, 
    CLASS_TILE      NUMBER          NOT NULL, 
    CONSTRAINT CLASS_PK PRIMARY KEY (CLASS_NO)
)
/

CREATE SEQUENCE CLASS_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER CLASS_AI_TRG
BEFORE INSERT ON CLASS 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT CLASS_SEQ.NEXTVAL
    INTO :NEW.CLASS_NO
    FROM DUAL;
END;
/

--DROP TRIGGER CLASS_AI_TRG;
/

--DROP SEQUENCE CLASS_SEQ;
/

COMMENT ON TABLE CLASS IS '강좌'
/

COMMENT ON COLUMN CLASS.CLASS_NO IS '강좌번호'
/

COMMENT ON COLUMN CLASS.SUBJECT_NO IS '과목코드'
/

COMMENT ON COLUMN CLASS.TEACHAR_ID IS '강사ID'
/

COMMENT ON COLUMN CLASS.CLASS_DAY IS '요일'
/

COMMENT ON COLUMN CLASS.CLASS_PERIOD IS '교시'
/

COMMENT ON COLUMN CLASS.CLASS_TILE IS '강의시간'
/

ALTER TABLE CLASS
    ADD CONSTRAINT FK_CLASS_SUBJECT_NO_SUBJECT_SU FOREIGN KEY (SUBJECT_NO)
        REFERENCES SUBJECT (SUBJECT_NO)
/

ALTER TABLE CLASS
    ADD CONSTRAINT FK_CLASS_TEACHAR_ID_TEACHAR_TE FOREIGN KEY (TEACHAR_ID)
        REFERENCES TEACHAR (TEA_ID)
/


-- SUBJECT Table Create SQL
CREATE TABLE STUDENT
(
    STU_ID       VARCHAR2(20)     NOT NULL, 
    STU_NAME     VARCAHR2(30)     NOT NULL, 
    STU_PHONE    CHAR(13)         NULL, 
    STU_ADDR     VARCHAR2(500)    NULL, 
    CONSTRAINT STUDENT_PK PRIMARY KEY (STU_ID)
)
/

COMMENT ON TABLE STUDENT IS '학생'
/

COMMENT ON COLUMN STUDENT.STU_ID IS '학생ID'
/

COMMENT ON COLUMN STUDENT.STU_NAME IS '이름'
/

COMMENT ON COLUMN STUDENT.STU_PHONE IS '전화번호'
/

COMMENT ON COLUMN STUDENT.STU_ADDR IS '주소'
/


-- SUBJECT Table Create SQL
CREATE TABLE ORDER_CLASS
(
    CLASS_NO    NUMBER          NOT NULL, 
    STU_ID      VARCHAR2(20)    NOT NULL, 
    CONSTRAINT ORDER_CLASS_PK PRIMARY KEY (CLASS_NO, STU_ID)
)
/

COMMENT ON TABLE ORDER_CLASS IS '수강 신청'
/

COMMENT ON COLUMN ORDER_CLASS.CLASS_NO IS '강좌번호'
/

COMMENT ON COLUMN ORDER_CLASS.STU_ID IS '학생ID'
/

ALTER TABLE ORDER_CLASS
    ADD CONSTRAINT FK_ORDER_CLASS_STU_ID_STUDENT_ FOREIGN KEY (STU_ID)
        REFERENCES STUDENT (STU_ID)
/

ALTER TABLE ORDER_CLASS
    ADD CONSTRAINT FK_ORDER_CLASS_CLASS_NO_CLASS_ FOREIGN KEY (CLASS_NO)
        REFERENCES CLASS (CLASS_NO)
/


