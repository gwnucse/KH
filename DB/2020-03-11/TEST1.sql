
CREATE TABLE EMP_01(
    EMP_ID NUMBER,
    EMP_NAME VARCHAR2(30),
    DEPT_TITLE VARCHAR2(20)
);

INSERT INTO EMP_01 VALUES (1, '박태규', '컴퓨터공학');
INSERT INTO EMP_01 VALUES ('박태규', '컴퓨터공학', 2);  --에러
INSERT INTO EMP_01(EMP_ID, EMP_NAME, DEPT_TITLE) 
VALUES (2, '박태규', '컴퓨터공학');
INSERT INTO EMP_01(EMP_ID, DEPT_TITLE, EMP_NAME) 
VALUES (2, '컴퓨터공학', '박태규');

SELECT * FROM EMP_01;

CREATE TABLE EMP_02(
    EMP_ID NUMBER,
    EMP_NAME VARCHAR2(30),
    DEPT_TITLE VARCHAR2(20),
    HIRE_DATE DATE DEFAULT SYSDATE
);

INSERT INTO EMP_02(EMP_ID, DEPT_TITLE, EMP_NAME) 
VALUES (2, '컴퓨터공학', '박태규');
INSERT INTO EMP_02 VALUES(3, '박태규2', '컴퓨터공학', DEFAULT);

SELECT * FROM EMP_02;

COMMIT;
ROLLBACK;
CREATE TABLE USERTBL(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR(20) UNIQUE,
    USER_PW VARCHAR2(20) NOT NULL
);

INSERT INTO USERTBL VALUES(1, 'user1', 'pass1');
INSERT INTO USERTBL VALUES(2, 'user2', 'pass2');
INSERT INTO USERTBL VALUES(3, 'user3', 'pass3');
INSERT INTO USERTBL VALUES(4, 'user4', 'pass4');
INSERT INTO USERTBL VALUES(5, 'user5', 'pass5');

SELECT * FROM USERTBL;

--테이블에 DML 구문이 동작했을때(INSERT, UPDATE, DELETE) COMMIT이 필요함.
--COMMIT을 하기 전에 ROLLBACK을 하면 마지막 COMMIT 지점으로 돌아간다.

SAVEPOINT sp1;      --COMMIT을 하게 되면 임시 지점도 사라진다.
ROLLBACK TO sp1;
