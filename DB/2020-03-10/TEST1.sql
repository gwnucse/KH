CREATE TABLE MEMBER(
    MEMBER_ID VARCHAR2(20),
    MEMBER_PW VARCHAR2(20),
    MEMBER_NAME VARCHAR2(20),
    MEMBER_AGE NUMBER
);

SELECT * FROM MEMBER;

COMMENT ON COLUMN MEMBER.MEMBER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.MEMBER_PW IS '비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '이름';
COMMENT ON COLUMN MEMBER.MEMBER_AGE IS '나이';

--제약조건이 없는 경우
CREATE TABLE USER_NOCONS(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PW VARCHAR2(30),
    USER_NAME VARCHAR2(30),
    GENDER CHAR(6),
    PHONE CHAR(11)
);

INSERT INTO USER_NOCONS VALUES (
1, 'user01', 'pass01', '유저1', '남자', '01012345678');
INSERT INTO USER_NOCONS VALUES (
2, NULL, NULL, NULL, '남자', '01012345679');
SELECT * FROM USER_NOCONS;

--NOT NULL 조건 추가
CREATE TABLE USER_NOTNULL(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20) NOT NULL,
    USER_PW VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER CHAR(6),
    PHONE CHAR(11)
);

INSERT INTO USER_NOTNULL VALUES (
1, 'user01', 'pass01', '유저1', '남자', '01012345678');
INSERT INTO USER_NOTNULL VALUES (
2, NULL, NULL, NULL, '남자', '01012345679');
SELECT * FROM USER_NOTNULL;

--중복 불가 조건 추가
CREATE TABLE USER_UNIQUE(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PW VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER CHAR(6),
    PHONE CHAR(11)
);

INSERT INTO USER_UNIQUE VALUES (
1, 'user01', 'pass01', '유저1', '남자', '01012345678');
INSERT INTO USER_UNIQUE VALUES (
2, NULL, 'pass01', '유저1', '남자', '01012345679');
SELECT * FROM USER_UNIQUE;

CREATE TABLE USER_UNIQUE2(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PW VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER CHAR(6),
    PHONE CHAR(11),
    UNIQUE(USER_ID)
);

INSERT INTO USER_UNIQUE2 VALUES (
1, 'user01', 'pass01', '유저1', '남자', '01012345678');
INSERT INTO USER_UNIQUE2 VALUES (
2, NULL, 'pass01', '유저1', '남자', '01012345679');
SELECT * FROM USER_UNIQUE2;

--PRIMARY KEY(NOT NULL + UNIQUE)
--한 행을 구별하기 위한 고유 식별자
-- 테이블당 1개만 설정 가능
CREATE TABLE USER_PK1(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PW VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER CHAR(6),
    PHONE CHAR(11)
);

INSERT INTO USER_PK1 VALUES (
1, 'user01', 'pass01', '유저1', '남자', '01012345678');
INSERT INTO USER_PK1 VALUES (
2, 'user02', 'pass02', '유저2', '남자', '01012345679');
SELECT * FROM USER_PK1;

CREATE TABLE USER_PK2(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PW VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER CHAR(6),
    PHONE CHAR(11),
    PRIMARY KEY(USER_NO)
);

--FOREIGN KEY
CREATE TABLE SHOP_MEMBER(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PW VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER CHAR(6),
    PHONE CHAR(11)
);

INSERT INTO SHOP_MEMBER VALUES (
1, 'user01', 'pass01', '유저1', '남자', '01012345678');
INSERT INTO SHOP_MEMBER VALUES (
2, 'user02', 'pass02', '유저2', '남자', '01012345678');
INSERT INTO SHOP_MEMBER VALUES (
3, 'user03', 'pass03', '유저3', '남자', '01012345678');
INSERT INTO SHOP_MEMBER VALUES (
4, 'javalove', 'pass04', '유저4', '남자', '01012345678');
INSERT INTO SHOP_MEMBER VALUES (
5, 'ABC', 'pass05', '유저5', '남자', '01012345678');
SELECT * FROM SHOP_MEMBER;

CREATE TABLE SHOP_BUY(
    BUY_NO NUMBER PRIMARY KEY,  -- 구매 번호
    USER_ID VARCHAR2(20),       -- 구매자ID
    PRODUCT_NAME VARCHAR2(30),  -- 상품명
    BUY_DATE DATE,              -- 구매 날짜
    FOREIGN KEY(USER_ID) REFERENCES SHOP_MEMBER(USER_ID)
);

INSERT INTO SHOP_BUY VALUES(
1, 'user01', '축구화', SYSDATE);
INSERT INTO SHOP_BUY VALUES(
2, 'user02', '야구화', SYSDATE);
INSERT INTO SHOP_BUY VALUES(
3, 'user03', '농구화', SYSDATE);
INSERT INTO SHOP_BUY VALUES(
4, 'javalove', '추상화', SYSDATE);
SELECT * FROM SHOP_BUY;

DELETE FROM SHOP_MEMBER WHERE USER_ID = 'javalove';
DELETE FROM SHOP_MEMBER WHERE USER_ID = 'ABC';
SELECT * FROM SHOP_MEMBER;

CREATE TABLE SHOP_MEMBER1(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PW VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER CHAR(6),
    PHONE CHAR(11)
);

CREATE TABLE SHOP_BUY3(
    BUY_NO NUMBER PRIMARY KEY,  -- 구매 번호
    USER_ID VARCHAR2(20),       -- 구매자ID
    PRODUCT_NAME VARCHAR2(30),  -- 상품명
    BUY_DATE DATE,              -- 구매 날짜
    FOREIGN KEY(USER_ID) REFERENCES SHOP_MEMBER1(USER_ID)
    ON DELETE SET NULL
);

CREATE TABLE SHOP_BUY4(
    BUY_NO NUMBER PRIMARY KEY,  -- 구매 번호
    USER_ID VARCHAR2(20),       -- 구매자ID
    PRODUCT_NAME VARCHAR2(30),  -- 상품명
    BUY_DATE DATE,              -- 구매 날짜
    FOREIGN KEY(USER_ID) REFERENCES SHOP_MEMBER1(USER_ID)
    ON DELETE CASCADE
);

INSERT INTO SHOP_MEMBER1 VALUES(
1, 'user01', 'pass01', '유저1', '남자', '01012345678');
INSERT INTO SHOP_MEMBER1 VALUES (
2, 'user02', 'pass02', '유저2', '남자', '01012345678');
INSERT INTO SHOP_MEMBER1 VALUES (
3, 'user03', 'pass03', '유저3', '남자', '01012345678');
SELECT * FROM SHOP_MEMBER1;

INSERT INTO SHOP_BUY3 VALUES(
1, 'user01', '축구화', SYSDATE);
INSERT INTO SHOP_BUY3 VALUES(
2, 'user02', '야구화', SYSDATE);
INSERT INTO SHOP_BUY3 VALUES(
3, 'user03', '농구화', SYSDATE);
SELECT * FROM SHOP_BUY3;

INSERT INTO SHOP_BUY4 VALUES(
1, 'user01', '축구화', SYSDATE);
INSERT INTO SHOP_BUY4 VALUES(
2, 'user02', '야구화', SYSDATE);
INSERT INTO SHOP_BUY4 VALUES(
3, 'user03', '농구화', SYSDATE);
SELECT * FROM SHOP_BUY4;

DELETE FROM SHOP_MEMBER1 WHERE USER_ID = 'user03';

--CHECK
CREATE TABLE USER_CHECK(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PW VARCHAR2(30),
    USER_NAME VARCHAR2(30),
    GENDER CHAR(6) CHECK (GENDER IN ('남자', '여자', '전환')),
    PHONE CHAR(11)
);

INSERT INTO USER_CHECK VALUES(
1, 'user01', 'pass01', '유저1', '남자', '01012345678');
INSERT INTO USER_CHECK VALUES(
2, 'user02', 'pass02', '유저2', '여자', '01012345678');
INSERT INTO USER_CHECK VALUES(
3, 'user03', 'pass03', '유저3', '전환', '01012345678');
INSERT INTO USER_CHECK VALUES(
4, 'user04', 'pass04', '유저4', 'M', '01012345678');

SELECT * FROM USER_CHECK;
